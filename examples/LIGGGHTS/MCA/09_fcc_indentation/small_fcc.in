####################################################################################################
#
# MCA example:  indentation of a small diamond cube into a big aluminium cube of fcc packed particles
#
# unit sytem: Pa / m / s
#
####################################################################################################


####################################################################################################
# MATERIAL PARAMETERS
####################################################################################################
# aliminium
variable	rho equal 270000		# effective density multyplied by 100 to allow large time step
variable	Y  equal 6.894757291e10		# Young modulus ~ 70 GPa
variable	p  equal 0.3			# Poisson ratio
variable	G  equal ${Y}/(2*(1+${p}))		# shear modulus
variable	K  equal ${Y}/(3*(1-2.0*${p}))	# bulk modulus
						# Y=1.0/(1.0/(9.0*K) + 1.0/(3.0*G))
						# p=0.5*(3.0*K - 2.0*G)/(3.0*K + G)
variable	COF  equal 0.3			# coefficient of friction 
variable	Sy equal 2.0e6			# Yield stress
variable	Eh equal 1e10			# Work hardening modulus

# diamond
variable	rho2 equal 2800000		# effective density to use the same time step as for aluminium
variable	Y2  equal 9.0e11		# Young modulus ~ 900 GPa
variable	p2  equal 0.18			# Poisson ratio
variable	G2  equal ${Y2}/(2*(1+${p2}))		# shear modulus
variable	K2  equal ${Y2}/(3*(1-2.0*${p2}))	# bulk modulus
						# Y=1.0/(1.0/(9.0*K) + 1.0/(3.0*G))
						# p=0.5*(3.0*K - 2.0*G)/(3.0*K + G)
variable	COF2  equal 0.3			# coefficient of friction 
variable	Sy2 equal 2.0e16		# Yield stress
variable	Eh2 equal 1e10			# Work hardening modulus

####################################################################################################
# ATOM PARAMETERS
####################################################################################################
variable	nat equal 2		# number of atom types in simulation
variable	rp  equal 0.254		# particle radius 10 inches
variable	d   equal 2*${rp}
variable	bt  equal 3		# n_bondtypes, 1-1, 1-2, 2-2
variable	bpa equal 12		# bonds_per_atom, should be >= coordination number: 6 for cubic, 12 for fcc 

variable	latparam equal ${d}/0.7071067812 # lattice parameter (for fcc)

####################################################################################################
# INITIALIZE LAMMPS
####################################################################################################
dimension	3
units		si
boundary	f f f	# style of boundaries for the global simulation box in each dimension
			# boundary x y z (x,y,z = one or two letters:
			# p (periodic) or f (fixed) or s (shrink-wrapped) or m (shrink-wrapped with a minimum)

atom_style	mca radius ${rp} packing fcc n_bondtypes ${bt} bonds_per_atom ${bpa} implicit_factor 0.0

atom_modify	map array # map keyword determines how atom ID lookup is done.
# Lookups are performed by bond routines to find the local atom index associated with a global atom ID. 
# When the array value is used, each processor stores a lookup table of length N (total # of atoms in the system).

neigh_modify	delay 0	check no cluster yes	# set parameters that affect the building and use of pairwise neighbor lists
			# defaults are delay = 10, every = 1, check = yes, once = no, cluster = no, include = all

newton		off
# turns Newton's 3rd law for pairwise and bonded interactions (default is 'on')
# 'off' means that if two interacting atoms are on different processors, both processors compute their 
# interaction and the resulting force information is not communicated.

# ????? processors	2 1 1
# ???? comm_modify	vel yes
communicate	single vel yes

####################################################################################################
# CREATE INITIAL GEOMETRY
####################################################################################################
variable	Lbase  equal 4*${latparam}+0.000001*${rp}		#10*${d}+${rp}
variable	Lind   equal 2*${latparam}+0.000002*${rp}		#10*${d}+${rp}
variable	Hind  equal ${Lbase}-0.000001*${rp}+${latparam}/2.	# Indenter touches the base cube
variable	Hmax  equal ${Hind}+${Lind}
variable	HmaxMax  equal ${Hind}+${Lind}+${Lind}
variable	Lmax  equal ${d}+${Lbase}

region		box block -${d} ${Lmax} -${d} ${Lmax} -${d} ${HmaxMax} units box
		# Regions are used to group atoms, delete atoms to create a void, insert atoms in a specified region, etc.
		# Use: region ID style args keyword arg 
		#               block args = xlo xhi ylo yhi zlo zhi
		#                          units value = lattice or box 
		#(lattice = the geometry is defined in lattice units; box = the geometry is defined in simulation box units
create_box	${nat} box bond/types 3	# create a simulation box

variable	IndShift  equal ${latparam}	#-0.000001*${rp}
variable	IndEnd  equal ${IndShift}+${Lind}
region		BaseBox block 0 ${Lbase} 0 ${Lbase} 0 ${Lbase} units box
region		IndBox  block ${IndShift} ${IndEnd} ${IndShift} ${IndEnd} ${Hind} ${Hmax} units box

####################################################################################################
# DISCRETIZATION PARAMETERS
####################################################################################################
variable	skin equal 2*${d}	# extra distance beyond force cutoff
neighbor	${skin} bin	# style = bin or nsq or multi; bin style creates the list by binning
timestep	1.0e-9		# Small step for initialization ???

####################################################################################################
# INTERACTION PHYSICS / MATERIAL MODEL
####################################################################################################
pair_style	mca ${skin}
pair_coeff	1 1 ${COF} ${G} ${K} ${Sy} ${Eh}
pair_coeff	2 2 ${COF2} ${G2} ${K2} ${Sy2} ${Eh2}
bond_style	mca
# In movale cellular automaton (MCA) method, a bond differs from one used in MD and DEM, where bond adds forces acting on atoms.
# MCA bonds are obligatory defined between all interacting pairs of atomata in order to specify if the automata belong to one body
# (linked/bonded pair), or different bodies (unlinked/unbonded pair). If the bond breaks, which is possible if the corresponding
# criterion is set, the automata interact in a different manner, in particular, they do not resist to tension and produce tangential
# dry friction force. And vice versa, an unlinked pair can switch to linked/bonded state which can be interperted as crack healing or microwelding.

bond_coeff	*	#1 -1 1 0.0001

mass 		1 1.0 #dummy
mass 		2 1.0 #dummy

####################################################################################################
# CREATE PARTICLES
####################################################################################################
##variable 	sc equal $d	# lattice spacing for creating particles
lattice		fcc ${latparam}
create_atoms	1 region BaseBox
create_atoms	2 region IndBox

####################################################################################################
# MATERIAL PROPERTIES REQUIRED FOR NEW PAIR STYLE
####################################################################################################
group		Base region BaseBox
set		group Base mol 1
set		group Base density ${rho}
group		Ind region IndBox
set		group Ind mol 2
set		group Ind density ${rho2}

#variable	gap   equal 0.5
displace_atoms Ind move 0 0 0.01 units lattice # make a gap between indenter and sample

#write_data	init-atom.*	# store initial configuration of atoms
#quit

####################################################################################################
# DEFINE VELOCITY BOUNDARY CONDITIONS
####################################################################################################
variable	Height equal ${Hmax}-${rp}
region		top block EDGE EDGE EDGE EDGE ${Height} EDGE units box
region		bot block EDGE EDGE EDGE EDGE EDGE 0.0 units box
group		top region top
group		bot region bot

# Loading parameters
variable	vel0 equal -0.1 # indenting velocity
variable	ts equal 10000.0*1.E-4	#6 # speed-up time = 10000 steps
variable	vel_up equal ${vel0}*(1.0-exp(-(2.4*time/${ts})*(2.4*time/${ts})))
variable	vel_down equal 0.0	#-v_vel_up
fix		topV_fix top mca/setvelocity 0 0 v_vel_up
fix		botV_fix bot mca/setvelocity 0 0 v_vel_down

####################################################################################################
# CREATE BONDS BETWEEN PARTICLES
####################################################################################################
variable	cutoff equal ${d}*(1.0+0.02)
fix 		bondcr1_1 all bond/create/mca 1     1     1   ${cutoff} 1     ${bpa}
					    # every itype jtype cutoff btype maxbondsperatom - obligatory parameters
					    # [iparam $imaxbond $inewtype] [jparam $imaxbond $inewtype]
					    # [state 0|1|2]
					    # [prob $fraction $seed]
fix 		bondcr1_2 all bond/create/mca 1 1 2 ${cutoff} 2 ${bpa} state 1 # make the cubes unbonded
fix 		bondcr2_2 all bond/create/mca 1 2 2 ${cutoff} 3 ${bpa}

####################################################################################################
# TIME INTEGRATION
####################################################################################################
group		nve_group region box
fix		integr nve_group nve/mca

####################################################################################################
# SIMULATION TIME PARAMETERS
####################################################################################################
variable	dt equal 4.e-4
variable	TimeStep equal ${rp}/(sqrt((${K}+4.*${G}/3.)/${rho}))
print 'Recommended time step for aluminium = ${TimeStep}'
if "${TimeStep} < ${dt}" then &
  "print 'Recommended time step ${TimeStep} is smaller than dt= ${dt}'" &
  quit
variable	TimeStep2 equal ${d}/(sqrt((${K2}+4.*${G2}/3.)/${rho2}))
print 'Recommended time step for diamond = ${TimeStep2}'
if "${TimeStep2} < ${dt}" then &
  "print 'Recommended time step for diamond ${TimeStep} is smaller than dt= ${dt}'" &
  quit
variable	fulltime equal 4.0	# Simulation time
variable	runstep equal  ${fulltime}/${dt}
variable	savetime equal 0.01
variable	filestep equal ${savetime}/${dt}
timestep	${dt}

####################################################################################################
# CLEAN OUTPUT DIRECTORY
####################################################################################################
#shell -rf post		# does not work
shell rm    post/*	# does not work
shell rmdir post	# does not work
shell mkdir post

####################################################################################################
# STATUS OUTPUT
####################################################################################################
#output settings, include total thermal energy
thermo_style	custom step atoms #numbond
thermo		100
thermo_modify	lost ignore norm no
compute_modify	thermo_temp dynamic yes

dump	dmp all custom  ${filestep} post/dump*.liggghts id type x y z vx vy vz fx fy fz omegax omegay omegaz tqx tqy tqz
#dump	dmp all custom  1 post/dump*.liggghts id type x y z vx vy vz fx fy fz omegax omegay omegaz tqx tqy tqz

####################################################################################################
# OUTPUT PLOT PARAMETERS
####################################################################################################
#get coordinates of the last particle
variable	mytime equal time	# step*${dt}
variable	px equal xcm(top,x)	#x[${lastone}]
variable	py equal xcm(top,y)	#y[${lastone}]
variable	pz equal xcm(top,z)	#z[${lastone}]
#variable	pfx equal fcm(top,x)	#fx[${lastone}]
#variable	pfy equal fcm(top,y)	#fy[${lastone}]
#variable	pfz equal fcm(top,z)	#fz[${lastone}]
variable	pfx equal f_topV_fix[1]	#fx[${lastone}]
variable	pfy equal f_topV_fix[2]	#fy[${lastone}]
variable	pfz equal f_topV_fix[3]	#fz[${lastone}]
fix		outfile all print ${filestep} "${mytime} ${px} ${py} ${pz} ${pfx} ${pfy} ${pfz}" file cube.dat screen no title "# t x y z fx fy fz"

#variable	stress equal 0.5*(f_velbot_fix[2]-f_veltop_fix[2])/20 # stress = force / initial width
#variable	length equal xcm(top,z)-xcm(bot,z)
#variable	strain equal (v_length-${length})/${length} # engineering strain
#fix		stress_curve all print 10 "${strain} ${stress}" file stress_strain.dat screen no

####################################################################################################
# RUN SIMULATION
####################################################################################################
run		1	# run one step to create bonds
fix_modify	bondcr1_1 every 0  # do not create new bonds afterwards
# allow creating bonds between indeter and sample#fix_modify	bondcr1_2 every 0
fix_modify	bondcr2_2 every 0  # do not create new bonds afterwards

write_data	data.*	# store full initial configuration (with bonds)

run		${runstep}

write_data	data.*

# Reverse loading smoothly
variable	vel_revers equal  ${vel0}*cos((time-${fulltime})*2.0*PI/${ts})
unfix		topV_fix
fix		topV_fix top mca/setvelocity 0 0 v_vel_revers
variable	revstep equal  ${ts}/(2.0*${dt})
run		${revstep}

# Unloading
variable	vel_unload equal  -${vel0}
unfix		topV_fix
fix		topV_fix top mca/setvelocity 0 0 v_vel_unload
variable	unloadstep equal  ${runstep}/3.
run		${unloadstep}

write_data	data.*
quit
