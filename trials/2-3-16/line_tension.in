# line of mca atoms - tension

######## variables for simulation setup #########
variable bt  equal 1	#n_bondtypes, in futur may be 2:linked|unlinked
variable bpa equal 6	#bonds_per_atom, should be >= Coordination Number: 6 for cubuc, 12 for fcc 
variable nat equal 2	#number of atom types in simulation

variable rp equal 10*0.0254	#particle radius 10 inches
variable d  equal 2*${rp}
variable skin equal 2*${d}	# extra distance beyond force cutoff
variable sc equal $d*(1.0-0.00001)
variable c  equal ${d}*(1.0+0.01)
variable rb equal 0.8*${rp}
variable L  equal 10*${d}+${rp}
variable 2L equal 2*$L

# material parameters (aliminium)
variable rho equal 2700			# density
variable Y  equal 6.894757291e10	# Young modulus 70 GPa
variable p  equal 0.3			# Poisson ratio
variable G  equal $Y/(2*(1+$p))		# Shear modulus

# Loading parameters
variable KIP equal 4448.2216		#N
variable inch equal 0.0254		#mm

variable M equal 100*${KIP}/${inch}
variable F equal 10*${KIP}		#N


# Time step
variable dt equal 0.00001

# Simulation time parameters
variable fulltime equal 10
variable runstep equal ${fulltime}/${dt}
variable savetime equal 0.01
variable filestep equal ${savetime}/${dt}
################################################

# atom_style	hybrid granular mca n_bondtypes ${bt} bonds_per_atom ${bpa}
atom_style	mca radius ${rp} packing sc n_bondtypes ${bt} bonds_per_atom ${bpa}

# map keyword determines how atom ID lookup is done.
# Lookups are performed by bond routines to find the local atom index associated with a global atom ID. 
# When the array value is used, each processor stores a lookup table of length N (total # of atoms in the system).
atom_modify	map array

# style of boundaries for the global simulation box in each dimension
# boundary x y z (x,y,z = one or two letters: p (periodic) or f (fixed) or s (shrink-wrapped) or m (shrink-wrapped with a minimum) 
boundary	f f f

# turns Newton's 3rd law 'on' or 'off' for pairwise and bonded interactions (default 'on')
# 'off' means that if two interacting atoms are on different processors, both processors compute their 
# interaction and the resulting force information is not communicated.
newton		off

#processors  2 1 1

communicate	single vel yes

units		si

#Regions are used to group atoms, delete atoms to create a void, insert atoms in a specified region, etc.
#Use: region ID style args keyword arg 
#               block args = xlo xhi ylo yhi zlo zhi
#                          units value = lattice or box 
#(lattice = the geometry is defined in lattice units; box = the geometry is defined in simulation box units
region		reg block -$L ${2L} -1 1 -$L 1 units box

#create_box N region-ID; N = # of atom types in simulation
create_box	${nat} reg #bonds 1 6 	# {num_atom_types} {region} bonds moved into atom_style for LIGGGHTS>=3.X.X

#neighbor skin style - sets parameters that affect the building of pairwise neighbor lists.
# skin = extra distance beyond force cutoff (distance units)
# style = bin or nsq or multi; bin style creates the list by binning
neighbor	${skin} bin

#set parameters that affect the building and use of pairwise neighbor lists.
# defaults are delay = 10, every = 1, check = yes, once = no, cluster = no, include = all
# neigh_modify delay 0 contact_distance_factor 1.5 - for distance > contact_distance_factor*(ri+rj)+skin 
neigh_modify	delay 0

#New pair style // Нужно свой делать????
##pair_style 	gran model hertz tangential history 
pair_style 	mca ${skin} # cutoff as for 'pair_soft' - just for working now

#Specify the pairwise force field coefficients - Зачем нам? - без этого не работает
pair_coeff	* * 0.0 # ?? Later change it for real mca

#bond
bond_style 	mca


variable I equal 0.25*PI*${rb}*${rb}*${rb}*${rb}
variable A equal PI*${rb}*${rb}

#double kn = E/lenght;
#double ks = 12*I*E/(A*lenght*lenght*lenght);
variable kn equal 2*$Y/$d 		 #grain behaivior ?
variable ks equal 12*$I*$Y/($A*$d*$d*$d) #${kn}/2.5

print $Y
print $G
print $I
print $A
print ${kn}
print ${ks}
bond_coeff 	1 ${rb} ${kn} ${ks} 1 1e4 1e4
#bond_coeff 	1 ${rb} $Y $G 1 1e10 1e10 #N rb Sn_bond St_bond TYPE_OF_BOND r_break|sigma_break tau_break (temp)

#Material properties required for new pair styles

#Everything that happens during a simulation besides force computation, neighbor list construction, and output, 
#is a "fix". This includes time integration (update of coordinates and velocities), force constraints or 
#boundary conditions (SHAKE or walls), and diagnostics (compute a diffusion coefficient). 

fix 		m1 all property/global youngsModulus peratomtype $Y $Y
fix 		m2 all property/global poissonsRatio peratomtype $p $p
fix 		m3 all property/global coefficientRestitution peratomtypepair 2 0.2 0.2 0.2 0.2
fix 		m4 all property/global coefficientFriction peratomtypepair 2 0.3 0.3 0.3 0.3

mass 		1 1.0 #dummy
mass 		2 1.0 #dummy

timestep	1.0e-9 # Small step for initialization ???

# ================================================
# create just 11 particles in a line
# ================================================
region		bc cylinder x 0.00 0.00 ${rp} 0.0 $L units box
lattice		sc ${sc}
create_atoms	1 region bc
run 1

group 		bonded id >= 1
##set		group all density ${rho} diameter ${d}
set		group all density ${rho} # for mca we set their size in 'atom_style mca radius'
run 1

variable lastone equal atoms

group		freezed id == 1
group		tipball id == ${lastone}

run 1
fix f1	freezed freeze	#fixed bearing

fix 		bondcr all bond/create/mca 1 1 1 ${c} 1 ${bpa} #every itype jtype cutoff btype newperts

#fix		gravi all gravity 9.81 vector 0.0 0.0 -1.0

#atoms may not be lost, insert wall at box bounds
#fix boxwalls_x1 all wall/gran model hertz tangential history primitive type 1 xplane -$L
#fix boxwalls_x2 all wall/gran model hertz tangential history primitive type 1 xplane +${2L}
#fix boxwalls_y1 all wall/gran model hertz tangential history primitive type 1 yplane -1
#fix boxwalls_y2 all wall/gran model hertz tangential history primitive type 1 yplane +1
#fix boxwalls_z1 all wall/gran model hertz tangential history primitive type 1 zplane -$L
#fix boxwalls_z2 all wall/gran model hertz tangential history primitive type 1 zplane +1

#region and insertion

group		nve_group region reg

#apply nve integration to all particles that are inserted as single particles
# - This does not update orientation! For mca we need 'nve/sphere update dipole' and 'atom_style dipole'
#   or  'nve/asphere'????? 
fix		integr nve_group nve/mca

#output settings, include total thermal energyg
thermo_style	custom step atoms #numbond
thermo		100
thermo_modify	lost ignore norm no
compute_modify	thermo_temp dynamic yes

#insert the first particles so that dump is not empty
shell rm -rf post
shell mkdir post
##dump		dmp 	all custom  ${filestep} post/dump*.liggghts id type x y z vx vy vz fx fy fz omegax omegay omegaz radius
dump		dmp 	all custom  ${filestep} post/dump*.liggghts id type x y z vx vy vz fx fy fz omegax omegay omegaz

#get coordinates of the last particle
variable time equal step*dt
variable px equal x[${lastone}]
variable py equal y[${lastone}]
variable pz equal z[${lastone}]
variable pfx equal fx[${lastone}]
variable pfy equal fy[${lastone}]
variable pfz equal fz[${lastone}]

#fix outfile all print ${filestep} "${time};${px};${py};${pz}" file line.csv screen no title "t;x;y;z"
fix outfile all print ${filestep} "${time} ${px} ${py} ${pz} ${pfx} ${pfy} ${pfz}" file line.dat screen no title "# t x y z fx fy fz"

#insert particles
run	1		#run one step
fix_modify	bondcr every 0  #do not create new bonds after this line

#compression
#fix 	tipF tipball addforce  -$F 0 0    #1kip=4.4482216kN
#run 10000
#tension
fix 	tipF tipball addforce  $F 0 0    #1kip=4.4482216kN
#fix 	tipM tipball addtorque 0 $M  0	  #not possible 

timestep	${dt}
#quit
variable t equal 1/${dt} 	#run 1 second
run $t



